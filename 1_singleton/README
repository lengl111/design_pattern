单例模式:
	懒汉
		① 加锁+单例对象自动回收；
		② 静态局部变量，C++11推荐使用这种方式，安全，性能优。
	饿汉
		① 基础版本，static 私有变量，一开始全局静态变量初始化，
		  线程安全，不需要加锁，存在的问题（多个单例类有依赖关系，存在初始化顺序问题）。
		② 增强版本（boost），解决基础版本存在的初始化话顺序问题，引入辅助的代理类，
		  用struct 表示，然后一开始初始化 static的 ObjCreator 变量，触发构造函数，进而
		  初始化Singleton 的静态局部变量，若存在多单例依赖关系，静态局部变量可以解决.
		
